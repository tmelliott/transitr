// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// construct_network
List construct_network(List nw, List shapes);
RcppExport SEXP _transitr_construct_network(SEXP nwSEXP, SEXP shapesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type nw(nwSEXP);
    Rcpp::traits::input_parameter< List >::type shapes(shapesSEXP);
    rcpp_result_gen = Rcpp::wrap(construct_network(nw, shapes));
    return rcpp_result_gen;
END_RCPP
}
// shapes_df_to_list
List shapes_df_to_list(DataFrame x);
RcppExport SEXP _transitr_shapes_df_to_list(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(shapes_df_to_list(x));
    return rcpp_result_gen;
END_RCPP
}
// run_realtime_model
void run_realtime_model(List nw, int nparticles, int numcore);
RcppExport SEXP _transitr_run_realtime_model(SEXP nwSEXP, SEXP nparticlesSEXP, SEXP numcoreSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type nw(nwSEXP);
    Rcpp::traits::input_parameter< int >::type nparticles(nparticlesSEXP);
    Rcpp::traits::input_parameter< int >::type numcore(numcoreSEXP);
    run_realtime_model(nw, nparticles, numcore);
    return R_NilValue;
END_RCPP
}

RcppExport SEXP run_testthat_tests();

static const R_CallMethodDef CallEntries[] = {
    {"_transitr_construct_network", (DL_FUNC) &_transitr_construct_network, 2},
    {"_transitr_shapes_df_to_list", (DL_FUNC) &_transitr_shapes_df_to_list, 1},
    {"_transitr_run_realtime_model", (DL_FUNC) &_transitr_run_realtime_model, 3},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_transitr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
